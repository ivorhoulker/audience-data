[{"/Users/ivorhoulker/_CODE/questioner/src/App.tsx":"1","/Users/ivorhoulker/_CODE/questioner/src/Firebase.ts":"2","/Users/ivorhoulker/_CODE/questioner/src/index.tsx":"3","/Users/ivorhoulker/_CODE/questioner/src/reportWebVitals.ts":"4","/Users/ivorhoulker/_CODE/questioner/src/components/Question.tsx":"5","/Users/ivorhoulker/_CODE/questioner/src/routes/AnswerQuestions.tsx":"6","/Users/ivorhoulker/_CODE/questioner/src/routes/SetQuestions.tsx":"7"},{"size":2535,"mtime":1608453749418,"results":"8","hashOfConfig":"9"},{"size":599,"mtime":1608441641079,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1608377087112,"results":"11","hashOfConfig":"9"},{"size":425,"mtime":1608377087113,"results":"12","hashOfConfig":"9"},{"size":1537,"mtime":1608452052941,"results":"13","hashOfConfig":"9"},{"size":157,"mtime":1608391955898,"results":"14","hashOfConfig":"9"},{"size":969,"mtime":1608404007058,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jyyu1h",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},"/Users/ivorhoulker/_CODE/questioner/src/App.tsx",["34","35","36","37","38","39"],"/Users/ivorhoulker/_CODE/questioner/src/Firebase.ts",[],["40","41"],"/Users/ivorhoulker/_CODE/questioner/src/index.tsx",[],"/Users/ivorhoulker/_CODE/questioner/src/reportWebVitals.ts",[],"/Users/ivorhoulker/_CODE/questioner/src/components/Question.tsx",["42"],"import React, { useState } from \"react\";\nimport { Question as QuestionType } from \"../types/Question\";\nimport { firestore, auth, timestamp } from \"../Firebase\";\n\nconst QuestionComponent: React.FC<{ question: QuestionType }> = ({\n  question,\n}) => {\n  const [formValue, setFormValue] = useState(\"\");\n\n  const setQuestion = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const { uid } = auth.currentUser!;\n    const questionsRef = firestore.collection(\"questions\");\n    const doc = await questionsRef.doc(\"testID\").get();\n    const content = {\n      english: formValue,\n      updatedAt: timestamp(),\n      uid,\n    };\n    if (doc.exists) {\n      const docId = await questionsRef\n        .doc(\"testID\")\n        .set(content, { merge: true });\n    } else {\n      //ADD NEW DOC\n      questionsRef.add(content);\n    }\n\n    // await questionsRef.add({\n    //   text: formValue,\n    //   createdAt: timestamp(),\n    //   uid,\n    // });\n\n    // questionsRef\n    //   .get()\n    //   .then((doc) => {\n    //     if (doc.exists) {\n    //       return usernameUnavailable();\n    //     }\n\n    //     return createAccount();\n    //   })\n    //   .catch((error) => handleError(error));\n  };\n\n  return (\n    <>\n      <input\n        value={question.english}\n        onChange={(e) => setFormValue(e.target.value)}\n      ></input>\n      <button onClick={setQuestion}>Set</button>\n      <ul>\n        <li>{question.english}</li>\n        <li>{question.category}</li>\n      </ul>\n    </>\n  );\n};\n\nexport default QuestionComponent;\n","/Users/ivorhoulker/_CODE/questioner/src/routes/AnswerQuestions.tsx",["43"],"import React from \"react\";\n\ninterface Props {}\n\nconst AnswerQuestions: React.FC<Props> = ({}) => {\n  return <>Answer</>;\n};\n\nexport default AnswerQuestions;\n","/Users/ivorhoulker/_CODE/questioner/src/routes/SetQuestions.tsx",["44","45","46"],"import React, { useState } from \"react\";\n\nimport QuestionComponent from \"../components/Question\";\nimport { firestore } from \"../Firebase\";\nimport \"firebase/firestore\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { Question } from \"../types/Question\";\n\ninterface Props {}\n\nconst SetQuestions: React.FC<Props> = ({}) => {\n  const questionsRef = firestore.collection(\"questions\");\n  const query = questionsRef.limit(9999);\n\n  const [\n    questions,\n    questionsLoading,\n    questionsError,\n  ] = useCollectionData<Question>(query);\n\n  console.log(questions);\n  const handleSubmit = () => {};\n  return (\n    <>\n      {questionsError && (\n        <strong>Error: {JSON.stringify(questionsError)}</strong>\n      )}\n      {questionsLoading && <span>Collection: Loading...</span>}\n      {questions &&\n        questions.map((q, i) => {\n          return <QuestionComponent question={q} />;\n        })}\n    </>\n  );\n};\n\nexport default SetQuestions;\n",{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"51","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":12},{"ruleId":"47","severity":1,"message":"52","line":9,"column":10,"nodeType":"49","messageId":"50","endLine":9,"endColumn":27},{"ruleId":"47","severity":1,"message":"53","line":11,"column":8,"nodeType":"49","messageId":"50","endLine":11,"endColumn":25},{"ruleId":"47","severity":1,"message":"54","line":24,"column":18,"nodeType":"49","messageId":"50","endLine":24,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":48,"column":6,"nodeType":"57","endLine":48,"endColumn":8,"suggestions":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"47","severity":1,"message":"63","line":21,"column":13,"nodeType":"49","messageId":"50","endLine":21,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":5,"column":43,"nodeType":"66","messageId":"67","endLine":5,"endColumn":45},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":11,"column":40,"nodeType":"66","messageId":"67","endLine":11,"endColumn":42},{"ruleId":"47","severity":1,"message":"68","line":22,"column":9,"nodeType":"49","messageId":"50","endLine":22,"endColumn":21},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useCollectionData' is defined but never used.","'QuestionComponent' is defined but never used.","'loadData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signIn'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'docId' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'handleSubmit' is assigned a value but never used.",{"desc":"72","fix":"73"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [signIn]",{"range":"74","text":"75"},[1429,1431],"[signIn]"]