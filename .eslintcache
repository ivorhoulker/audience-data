[{"/Users/ivorhoulker/_CODE/questioner/src/App.tsx":"1","/Users/ivorhoulker/_CODE/questioner/src/Firebase.ts":"2","/Users/ivorhoulker/_CODE/questioner/src/index.tsx":"3","/Users/ivorhoulker/_CODE/questioner/src/reportWebVitals.ts":"4","/Users/ivorhoulker/_CODE/questioner/src/routes/AnswerQuestions.tsx":"5","/Users/ivorhoulker/_CODE/questioner/src/routes/SetQuestions.tsx":"6","/Users/ivorhoulker/_CODE/questioner/src/components/EditableQuestion.tsx":"7","/Users/ivorhoulker/_CODE/questioner/src/types/Question.ts":"8","/Users/ivorhoulker/_CODE/questioner/src/components/QuestionForm.tsx":"9","/Users/ivorhoulker/_CODE/questioner/src/helpers/sentenceCase.ts":"10","/Users/ivorhoulker/_CODE/questioner/src/components/AnswerForm.tsx":"11"},{"size":2498,"mtime":1608482006137,"results":"12","hashOfConfig":"13"},{"size":1059,"mtime":1608454111764,"results":"14","hashOfConfig":"13"},{"size":501,"mtime":1608526713984,"results":"15","hashOfConfig":"13"},{"size":425,"mtime":1608377087113,"results":"16","hashOfConfig":"13"},{"size":2972,"mtime":1608550313632,"results":"17","hashOfConfig":"13"},{"size":1820,"mtime":1608533258032,"results":"18","hashOfConfig":"13"},{"size":1535,"mtime":1608454931719,"results":"19","hashOfConfig":"13"},{"size":1717,"mtime":1608481769400,"results":"20","hashOfConfig":"13"},{"size":5209,"mtime":1608534439254,"results":"21","hashOfConfig":"13"},{"size":175,"mtime":1608533610754,"results":"22","hashOfConfig":"13"},{"size":2882,"mtime":1608549359920,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"jyyu1h",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ivorhoulker/_CODE/questioner/src/App.tsx",["52","53","54","55","56","57"],"import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport \"./App.css\";\nimport EditableQuestion from \"./components/EditableQuestion\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport SetQuestions from \"./routes/SetQuestions\";\nimport AnswerQuestions from \"./routes/AnswerQuestions\";\nimport { auth, firestore } from \"./Firebase\";\nimport sample from \"./data/sample.json\";\nfunction App() {\n  async function loadData() {\n    const questionsRef = firestore.collection(\"questions\");\n    sample.forEach(async (data) => {\n      const snapshot = await questionsRef\n        .where(\"english\", \"==\", data.english)\n        .get();\n      if (snapshot.empty) {\n        questionsRef.add(data);\n        // const question = snapshot.docs[0].data();\n        // rest of your code\n      }\n    });\n  }\n  async function signIn() {\n    if (!user) {\n      await auth.signInAnonymously();\n      //loadData updates firebase from the local /data, replacing by english string\n      //no need to call it unless reseeding the whole thing, save money on reads!\n      // loadData();\n    }\n  }\n  const [user] = useAuthState(auth);\n  useEffect(() => {\n    signIn();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/set-questions\">Set Questions</Link>\n            </li>\n            <li>\n              <Link to=\"/answer-questions\">Answer Questions</Link>\n            </li>\n          </ul>\n          <Switch>\n            <Route exact path=\"/\">\n              <div>Nuthin much</div>\n            </Route>\n            <Route\n              exact\n              path=\"/set-questions\"\n              render={() => {\n                return user ? (\n                  <Redirect to=\"/set-questions\" />\n                ) : (\n                  <Redirect to=\"/\" />\n                );\n              }}\n            >\n              <SetQuestions />\n            </Route>\n            <Route exact path=\"/answer-questions\">\n              <AnswerQuestions />\n            </Route>\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",["58","59"],"/Users/ivorhoulker/_CODE/questioner/src/Firebase.ts",[],"/Users/ivorhoulker/_CODE/questioner/src/index.tsx",[],"/Users/ivorhoulker/_CODE/questioner/src/reportWebVitals.ts",[],"/Users/ivorhoulker/_CODE/questioner/src/routes/AnswerQuestions.tsx",["60","61","62","63","64","65","66","67","68"],"/Users/ivorhoulker/_CODE/questioner/src/routes/SetQuestions.tsx",["69","70","71","72","73","74","75"],"import React, { useState } from \"react\";\n\nimport EditableQuestion from \"../components/EditableQuestion\";\nimport { firestore } from \"../Firebase\";\nimport firebase from \"firebase/app\";\nimport {\n  useCollectionData,\n  useCollection,\n} from \"react-firebase-hooks/firestore\";\nimport { Question } from \"../types/Question\";\nimport QuestionForm from \"../components/QuestionForm\";\n\ninterface Props {}\n\nconst SetQuestions: React.FC<Props> = ({}) => {\n  //   const questionsRef = firestore.collection(\"questions\");\n  //   const query = questionsRef.limit(9999);\n\n  //   const [\n  //     questions,\n  //     questionsLoading,\n  //     questionsError,\n  //   ] = useCollectionData<Question>(query);\n\n  //   questions && console.log(questions);\n  const handleAddQuestion = () => {\n    //TODO\n    console.log(\"adding...\");\n  };\n  const questionsRef = firestore.collection(\"questions\");\n  const query = questionsRef.limit(9999);\n\n  const [q, qLoading, qError] = useCollection(query);\n  const questions: Question[] =\n    q &&\n    (q as firebase.firestore.QuerySnapshot).docs.map((doc) => {\n      return { ...(doc.data() as Question), id: doc.id };\n    });\n  return (\n    <>\n      {/* {questionsError && (\n        <strong>Error: {JSON.stringify(questionsError)}</strong>\n      )}\n      {questionsLoading && <span>Collection: Loading...</span>}\n      {questions &&\n        questions.map((q, i) => {\n          return <EditableQuestion key={i} question={q} />;\n        })} */}\n      <div className=\"container-fluid mb-3\">\n        {questions &&\n          questions.map((question) => (\n            <div className=\"card mb-3 bg-light\">\n              <div className=\"card-body\">\n                <QuestionForm question={question} />\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default SetQuestions;\n","/Users/ivorhoulker/_CODE/questioner/src/components/EditableQuestion.tsx",["76"],"import React, { useState } from \"react\";\nimport { Question as QuestionType } from \"../types/Question\";\nimport { firestore, auth, timestamp } from \"../Firebase\";\n\nconst EditableQuestion: React.FC<{ question: QuestionType }> = ({\n  question,\n}) => {\n  const [formValue, setFormValue] = useState(\"\");\n\n  const setQuestion = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const { uid } = auth.currentUser!;\n    const questionsRef = firestore.collection(\"questions\");\n    const doc = await questionsRef.doc(\"testID\").get();\n    const content = {\n      english: formValue,\n      updatedAt: timestamp(),\n      uid,\n    };\n    if (doc.exists) {\n      const docId = await questionsRef\n        .doc(\"testID\")\n        .set(content, { merge: true });\n    } else {\n      //ADD NEW DOC\n      questionsRef.add(content);\n    }\n\n    // await questionsRef.add({\n    //   text: formValue,\n    //   createdAt: timestamp(),\n    //   uid,\n    // });\n\n    // questionsRef\n    //   .get()\n    //   .then((doc) => {\n    //     if (doc.exists) {\n    //       return usernameUnavailable();\n    //     }\n\n    //     return createAccount();\n    //   })\n    //   .catch((error) => handleError(error));\n  };\n\n  return (\n    <>\n      <input\n        value={question.english}\n        onChange={(e) => setFormValue(e.target.value)}\n      ></input>\n      <button onClick={setQuestion}>Set</button>\n      <ul>\n        <li>{question.english}</li>\n        <li>{question.category}</li>\n      </ul>\n    </>\n  );\n};\n\nexport default EditableQuestion;\n",["77","78"],"/Users/ivorhoulker/_CODE/questioner/src/types/Question.ts",[],["79","80"],"/Users/ivorhoulker/_CODE/questioner/src/components/QuestionForm.tsx",["81","82","83","84","85","86","87","88"],"/Users/ivorhoulker/_CODE/questioner/src/helpers/sentenceCase.ts",[],"/Users/ivorhoulker/_CODE/questioner/src/components/AnswerForm.tsx",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"111","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":27},{"ruleId":"106","severity":1,"message":"112","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":24},{"ruleId":"106","severity":1,"message":"113","line":24,"column":18,"nodeType":"108","messageId":"109","endLine":24,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":48,"column":6,"nodeType":"116","endLine":48,"endColumn":8,"suggestions":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"112","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":24},{"ruleId":"106","severity":1,"message":"111","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":20},{"ruleId":"106","severity":1,"message":"122","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":20},{"ruleId":"106","severity":1,"message":"123","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":17,"column":43,"nodeType":"126","messageId":"127","endLine":17,"endColumn":45},{"ruleId":"106","severity":1,"message":"128","line":28,"column":9,"nodeType":"108","messageId":"109","endLine":28,"endColumn":26},{"ruleId":"106","severity":1,"message":"129","line":35,"column":13,"nodeType":"108","messageId":"109","endLine":35,"endColumn":21},{"ruleId":"106","severity":1,"message":"130","line":35,"column":23,"nodeType":"108","messageId":"109","endLine":35,"endColumn":29},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"112","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":24},{"ruleId":"106","severity":1,"message":"111","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":15,"column":40,"nodeType":"126","messageId":"127","endLine":15,"endColumn":42},{"ruleId":"106","severity":1,"message":"128","line":26,"column":9,"nodeType":"108","messageId":"109","endLine":26,"endColumn":26},{"ruleId":"106","severity":1,"message":"129","line":33,"column":13,"nodeType":"108","messageId":"109","endLine":33,"endColumn":21},{"ruleId":"106","severity":1,"message":"130","line":33,"column":23,"nodeType":"108","messageId":"109","endLine":33,"endColumn":29},{"ruleId":"106","severity":1,"message":"131","line":21,"column":13,"nodeType":"108","messageId":"109","endLine":21,"endColumn":18},{"ruleId":"118","replacedBy":"132"},{"ruleId":"120","replacedBy":"133"},{"ruleId":"118","replacedBy":"134"},{"ruleId":"120","replacedBy":"135"},{"ruleId":"106","severity":1,"message":"136","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":18},{"ruleId":"106","severity":1,"message":"137","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"111","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":20},{"ruleId":"106","severity":1,"message":"138","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"106","severity":1,"message":"139","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":22},{"ruleId":"106","severity":1,"message":"140","line":31,"column":5,"nodeType":"108","messageId":"109","endLine":31,"endColumn":13},{"ruleId":"106","severity":1,"message":"141","line":32,"column":5,"nodeType":"108","messageId":"109","endLine":32,"endColumn":11},{"ruleId":"106","severity":1,"message":"142","line":68,"column":9,"nodeType":"108","messageId":"109","endLine":68,"endColumn":28},{"ruleId":"106","severity":1,"message":"136","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":18},{"ruleId":"106","severity":1,"message":"137","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"111","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":20},{"ruleId":"106","severity":1,"message":"138","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"106","severity":1,"message":"139","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":22},{"ruleId":"106","severity":1,"message":"143","line":10,"column":19,"nodeType":"108","messageId":"109","endLine":10,"endColumn":29},{"ruleId":"106","severity":1,"message":"144","line":29,"column":5,"nodeType":"108","messageId":"109","endLine":29,"endColumn":13},{"ruleId":"106","severity":1,"message":"145","line":30,"column":5,"nodeType":"108","messageId":"109","endLine":30,"endColumn":17},{"ruleId":"106","severity":1,"message":"140","line":31,"column":5,"nodeType":"108","messageId":"109","endLine":31,"endColumn":13},{"ruleId":"106","severity":1,"message":"141","line":32,"column":5,"nodeType":"108","messageId":"109","endLine":32,"endColumn":11},{"ruleId":"106","severity":1,"message":"146","line":33,"column":5,"nodeType":"108","messageId":"109","endLine":33,"endColumn":14},{"ruleId":"106","severity":1,"message":"147","line":37,"column":10,"nodeType":"108","messageId":"109","endLine":37,"endColumn":18},{"ruleId":"106","severity":1,"message":"148","line":37,"column":20,"nodeType":"108","messageId":"109","endLine":37,"endColumn":31},{"ruleId":"106","severity":1,"message":"149","line":49,"column":10,"nodeType":"108","messageId":"109","endLine":49,"endColumn":18},{"ruleId":"106","severity":1,"message":"150","line":49,"column":20,"nodeType":"108","messageId":"109","endLine":49,"endColumn":31},{"ruleId":"106","severity":1,"message":"151","line":50,"column":9,"nodeType":"108","messageId":"109","endLine":50,"endColumn":17},{"ruleId":"106","severity":1,"message":"142","line":69,"column":9,"nodeType":"108","messageId":"109","endLine":69,"endColumn":28},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useCollectionData' is defined but never used.","'EditableQuestion' is defined but never used.","'loadData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signIn'. Either include it or remove the dependency array.","ArrayExpression",["152"],"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"'QuestionForm' is defined but never used.","'AnswerForm' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'handleAddQuestion' is assigned a value but never used.","'qLoading' is assigned a value but never used.","'qError' is assigned a value but never used.","'docId' is assigned a value but never used.",["153"],["154"],["153"],["154"],"'Category' is defined but never used.","'firebase' is defined but never used.","'useCollection' is defined but never used.","'useAuthState' is defined but never used.","'setError' is assigned a value but never used.","'errors' is assigned a value but never used.","'updateSubcategories' is assigned a value but never used.","'Controller' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'getValues' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'onSubmit' is assigned a value but never used.",{"desc":"155","fix":"156"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [signIn]",{"range":"157","text":"158"},[1436,1438],"[signIn]"]