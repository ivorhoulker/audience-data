[{"/Users/ivorhoulker/_CODE/questioner/src/App.tsx":"1","/Users/ivorhoulker/_CODE/questioner/src/Firebase.ts":"2","/Users/ivorhoulker/_CODE/questioner/src/index.tsx":"3","/Users/ivorhoulker/_CODE/questioner/src/reportWebVitals.ts":"4","/Users/ivorhoulker/_CODE/questioner/src/routes/AnswerQuestions.tsx":"5","/Users/ivorhoulker/_CODE/questioner/src/routes/SetQuestions.tsx":"6","/Users/ivorhoulker/_CODE/questioner/src/components/EditableQuestion.tsx":"7","/Users/ivorhoulker/_CODE/questioner/src/types/Question.ts":"8","/Users/ivorhoulker/_CODE/questioner/src/components/QuestionForm.tsx":"9","/Users/ivorhoulker/_CODE/questioner/src/helpers/sentenceCase.ts":"10","/Users/ivorhoulker/_CODE/questioner/src/components/AnswerForm.tsx":"11","/Users/ivorhoulker/_CODE/questioner/src/helpers/calculateResults.ts":"12"},{"size":2509,"mtime":1608570467896,"results":"13","hashOfConfig":"14"},{"size":1059,"mtime":1608454111764,"results":"15","hashOfConfig":"14"},{"size":501,"mtime":1608526713984,"results":"16","hashOfConfig":"14"},{"size":425,"mtime":1608377087113,"results":"17","hashOfConfig":"14"},{"size":4619,"mtime":1608573466749,"results":"18","hashOfConfig":"14"},{"size":1820,"mtime":1608533258032,"results":"19","hashOfConfig":"14"},{"size":1535,"mtime":1608454931719,"results":"20","hashOfConfig":"14"},{"size":1717,"mtime":1608481769400,"results":"21","hashOfConfig":"14"},{"size":3853,"mtime":1608569016665,"results":"22","hashOfConfig":"14"},{"size":175,"mtime":1608533610754,"results":"23","hashOfConfig":"14"},{"size":2882,"mtime":1608549359920,"results":"24","hashOfConfig":"14"},{"size":3231,"mtime":1608575285455,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"jyyu1h",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ivorhoulker/_CODE/questioner/src/App.tsx",["57","58","59","60","61","62"],"import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport \"./App.css\";\nimport EditableQuestion from \"./components/EditableQuestion\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport SetQuestions from \"./routes/SetQuestions\";\nimport AnswerQuestions from \"./routes/AnswerQuestions\";\nimport { auth, firestore } from \"./Firebase\";\nimport sample from \"./data/questions-v3-test.json\";\nfunction App() {\n  async function loadData() {\n    const questionsRef = firestore.collection(\"questions\");\n    sample.forEach(async (data) => {\n      const snapshot = await questionsRef\n        .where(\"english\", \"==\", data.english)\n        .get();\n      if (snapshot.empty) {\n        questionsRef.add(data);\n        // const question = snapshot.docs[0].data();\n        // rest of your code\n      }\n    });\n  }\n  async function signIn() {\n    if (!user) {\n      await auth.signInAnonymously();\n      //loadData updates firebase from the local /data, replacing by english string\n      //no need to call it unless reseeding the whole thing, save money on reads!\n      // loadData();\n    }\n  }\n  const [user] = useAuthState(auth);\n  useEffect(() => {\n    signIn();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/set-questions\">Set Questions</Link>\n            </li>\n            <li>\n              <Link to=\"/answer-questions\">Answer Questions</Link>\n            </li>\n          </ul>\n          <Switch>\n            <Route exact path=\"/\">\n              <div>Nuthin much</div>\n            </Route>\n            <Route\n              exact\n              path=\"/set-questions\"\n              render={() => {\n                return user ? (\n                  <Redirect to=\"/set-questions\" />\n                ) : (\n                  <Redirect to=\"/\" />\n                );\n              }}\n            >\n              <SetQuestions />\n            </Route>\n            <Route exact path=\"/answer-questions\">\n              <AnswerQuestions />\n            </Route>\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",["63","64"],"/Users/ivorhoulker/_CODE/questioner/src/Firebase.ts",[],"/Users/ivorhoulker/_CODE/questioner/src/index.tsx",[],"/Users/ivorhoulker/_CODE/questioner/src/reportWebVitals.ts",[],"/Users/ivorhoulker/_CODE/questioner/src/routes/AnswerQuestions.tsx",["65","66","67","68","69","70","71","72","73","74","75","76","77"],"/Users/ivorhoulker/_CODE/questioner/src/routes/SetQuestions.tsx",["78","79","80","81","82","83","84"],"import React, { useState } from \"react\";\n\nimport EditableQuestion from \"../components/EditableQuestion\";\nimport { firestore } from \"../Firebase\";\nimport firebase from \"firebase/app\";\nimport {\n  useCollectionData,\n  useCollection,\n} from \"react-firebase-hooks/firestore\";\nimport { Question } from \"../types/Question\";\nimport QuestionForm from \"../components/QuestionForm\";\n\ninterface Props {}\n\nconst SetQuestions: React.FC<Props> = ({}) => {\n  //   const questionsRef = firestore.collection(\"questions\");\n  //   const query = questionsRef.limit(9999);\n\n  //   const [\n  //     questions,\n  //     questionsLoading,\n  //     questionsError,\n  //   ] = useCollectionData<Question>(query);\n\n  //   questions && console.log(questions);\n  const handleAddQuestion = () => {\n    //TODO\n    console.log(\"adding...\");\n  };\n  const questionsRef = firestore.collection(\"questions\");\n  const query = questionsRef.limit(9999);\n\n  const [q, qLoading, qError] = useCollection(query);\n  const questions: Question[] =\n    q &&\n    (q as firebase.firestore.QuerySnapshot).docs.map((doc) => {\n      return { ...(doc.data() as Question), id: doc.id };\n    });\n  return (\n    <>\n      {/* {questionsError && (\n        <strong>Error: {JSON.stringify(questionsError)}</strong>\n      )}\n      {questionsLoading && <span>Collection: Loading...</span>}\n      {questions &&\n        questions.map((q, i) => {\n          return <EditableQuestion key={i} question={q} />;\n        })} */}\n      <div className=\"container-fluid mb-3\">\n        {questions &&\n          questions.map((question) => (\n            <div className=\"card mb-3 bg-light\">\n              <div className=\"card-body\">\n                <QuestionForm question={question} />\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default SetQuestions;\n","/Users/ivorhoulker/_CODE/questioner/src/components/EditableQuestion.tsx",["85"],"import React, { useState } from \"react\";\nimport { Question as QuestionType } from \"../types/Question\";\nimport { firestore, auth, timestamp } from \"../Firebase\";\n\nconst EditableQuestion: React.FC<{ question: QuestionType }> = ({\n  question,\n}) => {\n  const [formValue, setFormValue] = useState(\"\");\n\n  const setQuestion = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const { uid } = auth.currentUser!;\n    const questionsRef = firestore.collection(\"questions\");\n    const doc = await questionsRef.doc(\"testID\").get();\n    const content = {\n      english: formValue,\n      updatedAt: timestamp(),\n      uid,\n    };\n    if (doc.exists) {\n      const docId = await questionsRef\n        .doc(\"testID\")\n        .set(content, { merge: true });\n    } else {\n      //ADD NEW DOC\n      questionsRef.add(content);\n    }\n\n    // await questionsRef.add({\n    //   text: formValue,\n    //   createdAt: timestamp(),\n    //   uid,\n    // });\n\n    // questionsRef\n    //   .get()\n    //   .then((doc) => {\n    //     if (doc.exists) {\n    //       return usernameUnavailable();\n    //     }\n\n    //     return createAccount();\n    //   })\n    //   .catch((error) => handleError(error));\n  };\n\n  return (\n    <>\n      <input\n        value={question.english}\n        onChange={(e) => setFormValue(e.target.value)}\n      ></input>\n      <button onClick={setQuestion}>Set</button>\n      <ul>\n        <li>{question.english}</li>\n        <li>{question.category}</li>\n      </ul>\n    </>\n  );\n};\n\nexport default EditableQuestion;\n",["86","87"],"/Users/ivorhoulker/_CODE/questioner/src/types/Question.ts",[],["88","89"],"/Users/ivorhoulker/_CODE/questioner/src/components/QuestionForm.tsx",["90","91","92","93","94","95","96","97","98","99"],"import React, { useState } from \"react\";\nimport { Category, Question } from \"../types/Question\";\nimport { firestore, auth, timestamp } from \"../Firebase\";\nimport firebase from \"firebase/app\";\nimport {\n  useCollectionData,\n  useCollection,\n} from \"react-firebase-hooks/firestore\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport categories from \"../data/categories.json\";\nimport { sentenceCase } from \"../helpers/sentenceCase\";\ninterface Props {\n  question: Question;\n}\n\nconst schema = yup.object().shape({\n  english: yup.string().trim().required(),\n  chinese: yup.string().trim().required(),\n  category: yup.string().required(),\n  subcategory: yup.string().required(),\n  strength: yup.number().integer().positive().moreThan(0).required(),\n  multiplier: yup.number().required(),\n});\nconst QuestionForm: React.FC<Props> = ({ question }) => {\n  const {\n    register,\n    handleSubmit,\n    setError,\n    errors,\n    getValues,\n  } = useForm<Question>({\n    resolver: yupResolver(schema),\n  });\n\n  const questionsRef = firestore.collection(\"questions\");\n  const { uid } = auth.currentUser!;\n  // const query = questionsRef.limit(9999);\n\n  // const [q, qLoading, qError] = useCollection(query);\n  // const questions: Question[] =\n  //   q &&\n  //   (q as firebase.firestore.QuerySnapshot).docs.map((doc) => {\n  //     return { ...(doc.data() as Question), id: doc.id };\n  //   });\n  const onSubmit = async (data: Question) => {\n    const doc = await questionsRef.doc(question.id).get();\n    const content = {\n      ...data,\n      updatedAt: timestamp(),\n      editedBy: uid,\n    };\n    console.log(\"content: \", content);\n    if (doc.exists) {\n      await questionsRef.doc(question.id).set(content, { merge: true });\n      alert(\"done\");\n    } else {\n      //ADD NEW DOC\n      console.warn(\"id not found in firebase\");\n      // await questionsRef.add(content);\n    }\n    console.log(\"data\", data);\n  };\n\n  const updateSubcategories = () => {};\n\n  return (\n    <form\n      data-id={question.id}\n      className=\"row g-3\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div className=\"col-md-6\">\n        <label className=\"form-label\" htmlFor=\"english\">\n          English\n        </label>\n        <textarea\n          className=\"form-control\"\n          name={`english`}\n          ref={register}\n          defaultValue={question.english ?? \"\"}\n        />\n      </div>\n      <div className=\"col-md-6\">\n        <label className=\"form-label\" htmlFor=\"chinese\">\n          Chinese\n        </label>\n        <textarea\n          className=\"form-control\"\n          name={`chinese`}\n          ref={register}\n          defaultValue={question.chinese ?? \"\"}\n        />\n      </div>\n      <div className=\"col-md-6\">\n        <label className=\"form-label\" htmlFor=\"category\">\n          Category\n        </label>\n        <select className=\"form-select\" name={`category`} ref={register}>\n          <option value=\"\">Select...</option>\n          {Object.keys(categories).map((key, i) => {\n            return (\n              <option selected={question.category === key} key={i} value={key}>\n                {sentenceCase(key)}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n\n      <div className=\"col-md-6\">\n        <label className=\"form-label\" htmlFor=\"strength\">\n          Strength\n        </label>\n        <input\n          className=\"form-control\"\n          name={`strength`}\n          type=\"number\"\n          ref={register}\n          defaultValue={question.strength.toString() ?? \"\"}\n        />\n      </div>\n\n      <div className=\"col-12\">\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Save\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default QuestionForm;\n","/Users/ivorhoulker/_CODE/questioner/src/helpers/sentenceCase.ts",[],"/Users/ivorhoulker/_CODE/questioner/src/components/AnswerForm.tsx",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"/Users/ivorhoulker/_CODE/questioner/src/helpers/calculateResults.ts",[],{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"122","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":27},{"ruleId":"117","severity":1,"message":"123","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":24},{"ruleId":"117","severity":1,"message":"124","line":24,"column":18,"nodeType":"119","messageId":"120","endLine":24,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":48,"column":6,"nodeType":"127","endLine":48,"endColumn":8,"suggestions":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"133","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":33},{"ruleId":"117","severity":1,"message":"123","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":7,"column":3,"nodeType":"119","messageId":"120","endLine":7,"endColumn":20},{"ruleId":"117","severity":1,"message":"134","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":20},{"ruleId":"117","severity":1,"message":"135","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":18},{"ruleId":"117","severity":1,"message":"136","line":17,"column":10,"nodeType":"119","messageId":"120","endLine":17,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":21,"column":43,"nodeType":"139","messageId":"140","endLine":21,"endColumn":45},{"ruleId":"117","severity":1,"message":"141","line":33,"column":5,"nodeType":"119","messageId":"120","endLine":33,"endColumn":13},{"ruleId":"117","severity":1,"message":"142","line":34,"column":5,"nodeType":"119","messageId":"120","endLine":34,"endColumn":11},{"ruleId":"117","severity":1,"message":"143","line":35,"column":5,"nodeType":"119","messageId":"120","endLine":35,"endColumn":14},{"ruleId":"117","severity":1,"message":"144","line":46,"column":13,"nodeType":"119","messageId":"120","endLine":46,"endColumn":21},{"ruleId":"117","severity":1,"message":"145","line":46,"column":23,"nodeType":"119","messageId":"120","endLine":46,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"123","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":7,"column":3,"nodeType":"119","messageId":"120","endLine":7,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":15,"column":40,"nodeType":"139","messageId":"140","endLine":15,"endColumn":42},{"ruleId":"117","severity":1,"message":"146","line":26,"column":9,"nodeType":"119","messageId":"120","endLine":26,"endColumn":26},{"ruleId":"117","severity":1,"message":"144","line":33,"column":13,"nodeType":"119","messageId":"120","endLine":33,"endColumn":21},{"ruleId":"117","severity":1,"message":"145","line":33,"column":23,"nodeType":"119","messageId":"120","endLine":33,"endColumn":29},{"ruleId":"117","severity":1,"message":"147","line":21,"column":13,"nodeType":"119","messageId":"120","endLine":21,"endColumn":18},{"ruleId":"129","replacedBy":"148"},{"ruleId":"131","replacedBy":"149"},{"ruleId":"129","replacedBy":"150"},{"ruleId":"131","replacedBy":"151"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"152","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"153","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":16},{"ruleId":"117","severity":1,"message":"122","line":6,"column":3,"nodeType":"119","messageId":"120","endLine":6,"endColumn":20},{"ruleId":"117","severity":1,"message":"154","line":7,"column":3,"nodeType":"119","messageId":"120","endLine":7,"endColumn":16},{"ruleId":"117","severity":1,"message":"155","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":22},{"ruleId":"117","severity":1,"message":"141","line":31,"column":5,"nodeType":"119","messageId":"120","endLine":31,"endColumn":13},{"ruleId":"117","severity":1,"message":"142","line":32,"column":5,"nodeType":"119","messageId":"120","endLine":32,"endColumn":11},{"ruleId":"117","severity":1,"message":"143","line":33,"column":5,"nodeType":"119","messageId":"120","endLine":33,"endColumn":14},{"ruleId":"117","severity":1,"message":"156","line":67,"column":9,"nodeType":"119","messageId":"120","endLine":67,"endColumn":28},{"ruleId":"117","severity":1,"message":"152","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"153","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":16},{"ruleId":"117","severity":1,"message":"122","line":6,"column":3,"nodeType":"119","messageId":"120","endLine":6,"endColumn":20},{"ruleId":"117","severity":1,"message":"154","line":7,"column":3,"nodeType":"119","messageId":"120","endLine":7,"endColumn":16},{"ruleId":"117","severity":1,"message":"155","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":22},{"ruleId":"117","severity":1,"message":"157","line":10,"column":19,"nodeType":"119","messageId":"120","endLine":10,"endColumn":29},{"ruleId":"117","severity":1,"message":"158","line":29,"column":5,"nodeType":"119","messageId":"120","endLine":29,"endColumn":13},{"ruleId":"117","severity":1,"message":"159","line":30,"column":5,"nodeType":"119","messageId":"120","endLine":30,"endColumn":17},{"ruleId":"117","severity":1,"message":"141","line":31,"column":5,"nodeType":"119","messageId":"120","endLine":31,"endColumn":13},{"ruleId":"117","severity":1,"message":"142","line":32,"column":5,"nodeType":"119","messageId":"120","endLine":32,"endColumn":11},{"ruleId":"117","severity":1,"message":"143","line":33,"column":5,"nodeType":"119","messageId":"120","endLine":33,"endColumn":14},{"ruleId":"117","severity":1,"message":"160","line":37,"column":10,"nodeType":"119","messageId":"120","endLine":37,"endColumn":18},{"ruleId":"117","severity":1,"message":"161","line":37,"column":20,"nodeType":"119","messageId":"120","endLine":37,"endColumn":31},{"ruleId":"117","severity":1,"message":"162","line":49,"column":10,"nodeType":"119","messageId":"120","endLine":49,"endColumn":18},{"ruleId":"117","severity":1,"message":"163","line":49,"column":20,"nodeType":"119","messageId":"120","endLine":49,"endColumn":31},{"ruleId":"117","severity":1,"message":"164","line":50,"column":9,"nodeType":"119","messageId":"120","endLine":50,"endColumn":17},{"ruleId":"117","severity":1,"message":"156","line":69,"column":9,"nodeType":"119","messageId":"120","endLine":69,"endColumn":28},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useCollectionData' is defined but never used.","'EditableQuestion' is defined but never used.","'loadData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signIn'. Either include it or remove the dependency array.","ArrayExpression",["165"],"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'useRef' is defined but never used.","'QuestionForm' is defined but never used.","'AnswerForm' is defined but never used.","'ResourceLimits' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setError' is assigned a value but never used.","'errors' is assigned a value but never used.","'getValues' is assigned a value but never used.","'qLoading' is assigned a value but never used.","'qError' is assigned a value but never used.","'handleAddQuestion' is assigned a value but never used.","'docId' is assigned a value but never used.",["166"],["167"],["166"],["167"],"'Category' is defined but never used.","'firebase' is defined but never used.","'useCollection' is defined but never used.","'useAuthState' is defined but never used.","'updateSubcategories' is assigned a value but never used.","'Controller' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'onSubmit' is assigned a value but never used.",{"desc":"168","fix":"169"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [signIn]",{"range":"170","text":"171"},[1447,1449],"[signIn]"]