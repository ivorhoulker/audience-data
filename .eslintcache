[{"/Users/ivorhoulker/_CODE/_RUR/questioner/src/index.tsx":"1","/Users/ivorhoulker/_CODE/_RUR/questioner/src/reportWebVitals.ts":"2","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/AnswerQuestions.tsx":"3","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/SetQuestions.tsx":"4","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/AnswerForm.tsx":"5","/Users/ivorhoulker/_CODE/_RUR/questioner/src/helpers/sentenceCase.ts":"6","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/QuestionForm.tsx":"7","/Users/ivorhoulker/_CODE/_RUR/questioner/src/app/store.ts":"8","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/AnswerGroup.tsx":"9","/Users/ivorhoulker/_CODE/_RUR/questioner/src/helpers/calculateResults.ts":"10","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/NameForm.tsx":"11","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/RadioInput.tsx":"12","/Users/ivorhoulker/_CODE/_RUR/questioner/src/app/App.tsx":"13","/Users/ivorhoulker/_CODE/_RUR/questioner/src/layout/Page.tsx":"14","/Users/ivorhoulker/_CODE/_RUR/questioner/src/layout/Navbar.tsx":"15","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/NavLink.tsx":"16","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/Home.tsx":"17","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/SeeAnswers.tsx":"18","/Users/ivorhoulker/_CODE/_RUR/questioner/src/layout/Container.tsx":"19","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/SplashScreen.tsx":"20","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/Para.tsx":"21","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/BlinkingCursor.tsx":"22","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/ProgressBar.tsx":"23","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/Button.tsx":"24","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/ResultCard.tsx":"25","/Users/ivorhoulker/_CODE/_RUR/questioner/src/app/PrivateRoute.tsx":"26"},{"size":1703,"mtime":1610375832754,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1608377087113,"results":"29","hashOfConfig":"28"},{"size":859,"mtime":1610704756268,"results":"30","hashOfConfig":"28"},{"size":2135,"mtime":1609581620525,"results":"31","hashOfConfig":"28"},{"size":3838,"mtime":1610705158417,"results":"32","hashOfConfig":"28"},{"size":175,"mtime":1608533610754,"results":"33","hashOfConfig":"28"},{"size":5868,"mtime":1609581620521,"results":"34","hashOfConfig":"28"},{"size":2884,"mtime":1610689954394,"results":"35","hashOfConfig":"28"},{"size":2153,"mtime":1610701355576,"results":"36","hashOfConfig":"28"},{"size":4067,"mtime":1610124923479,"results":"37","hashOfConfig":"28"},{"size":3264,"mtime":1610675107543,"results":"38","hashOfConfig":"28"},{"size":1433,"mtime":1610705042090,"results":"39","hashOfConfig":"28"},{"size":2908,"mtime":1610693778847,"results":"40","hashOfConfig":"28"},{"size":317,"mtime":1610691000417,"results":"41","hashOfConfig":"28"},{"size":950,"mtime":1610691008921,"results":"42","hashOfConfig":"28"},{"size":1565,"mtime":1610697662378,"results":"43","hashOfConfig":"28"},{"size":1031,"mtime":1610690992437,"results":"44","hashOfConfig":"28"},{"size":2985,"mtime":1610704823067,"results":"45","hashOfConfig":"28"},{"size":286,"mtime":1610705005848,"results":"46","hashOfConfig":"28"},{"size":554,"mtime":1610383064960,"results":"47","hashOfConfig":"28"},{"size":176,"mtime":1610635664650,"results":"48","hashOfConfig":"28"},{"size":271,"mtime":1610384204537,"results":"49","hashOfConfig":"50"},{"size":2766,"mtime":1610703092999,"results":"51","hashOfConfig":"28"},{"size":696,"mtime":1610699652906,"results":"52","hashOfConfig":"28"},{"size":2283,"mtime":1610684987154,"results":"53","hashOfConfig":"28"},{"size":1089,"mtime":1610693763546,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1je16tf",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1nucy6l",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"57"},"/Users/ivorhoulker/_CODE/_RUR/questioner/src/index.tsx",[],["122","123"],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/reportWebVitals.ts",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/AnswerQuestions.tsx",["124","125"],"import React from \"react\";\nimport AnswerForm from \"../components/AnswerForm\";\nimport { useFirestore, useFirestoreConnect } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../app/store\";\nimport { Question } from \"../types/Question\";\nimport Page from \"../layout/Page\";\nimport Container from \"../layout/Container\";\ninterface Props {}\n\nconst AnswerQuestions: React.FC<Props> = ({}) => {\n  useFirestoreConnect([{ collection: \"questions\" }]);\n  const questions = useSelector<RootState>(\n    (state) => state.firestore.ordered.questions\n  );\n  const uid = useSelector<RootState>(\n    (state) => state.firebase.auth.uid\n  ) as string;\n  return (\n    <Page>\n      <Container>\n        <AnswerForm uid={uid} questions={questions as Question[]} />\n      </Container>\n    </Page>\n  );\n};\n\nexport default AnswerQuestions;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/SetQuestions.tsx",["126"],"// import React, { useState } from \"react\";\n\n// import EditableQuestion from \"../components/EditableQuestion\";\n// import { firestore } from \"../Firebase\";\n// import firebase from \"firebase/app\";\n// import {\n//   useCollectionData,\n//   useCollection,\n// } from \"react-firebase-hooks/firestore\";\n// import { Question } from \"../types/Question\";\n// import QuestionForm from \"../components/QuestionForm\";\n\n// interface Props {}\n\n// const SetQuestions: React.FC<Props> = ({}) => {\n//   //   const questionsRef = firestore.collection(\"questions\");\n//   //   const query = questionsRef.limit(9999);\n\n//   //   const [\n//   //     questions,\n//   //     questionsLoading,\n//   //     questionsError,\n//   //   ] = useCollectionData<Question>(query);\n\n//   //   questions && console.log(questions);\n//   const handleAddQuestion = () => {\n//     //TODO\n//     console.log(\"adding...\");\n//   };\n//   const questionsRef = firestore.collection(\"questions\");\n//   const query = questionsRef.limit(9999);\n\n//   const [q, qLoading, qError] = useCollection(query);\n//   const questions: Question[] =\n//     q &&\n//     (q as firebase.firestore.QuerySnapshot).docs.map((doc) => {\n//       return { ...(doc.data() as Question), id: doc.id };\n//     });\n//   return (\n//     <>\n//       {/* {questionsError && (\n//         <strong>Error: {JSON.stringify(questionsError)}</strong>\n//       )}\n//       {questionsLoading && <span>Collection: Loading...</span>}\n//       {questions &&\n//         questions.map((q, i) => {\n//           return <EditableQuestion key={i} question={q} />;\n//         })} */}\n//       <div className=\"container-fluid mb-3\">\n//         {questions &&\n//           questions.map((question) => (\n//             <div className=\"card mb-3 bg-light\">\n//               <div className=\"card-body\">\n//                 <QuestionForm question={question} />\n//               </div>\n//             </div>\n//           ))}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default SetQuestions;\nimport React from \"react\";\n\ninterface Props {}\n\nconst SetQuestions: React.FC<Props> = ({}) => {\n  return <>Qs</>;\n};\n\nexport default SetQuestions;\n",["127","128"],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/AnswerForm.tsx",["129","130","131","132","133","134","135","136"],"import React, { useEffect, useCallback, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestore, useFirestoreConnect } from \"react-redux-firebase\";\nimport { RootState, User } from \"../app/store\";\nimport { calculateResults } from \"../helpers/calculateResults\";\nimport Typing from \"react-typing-animation\";\nimport Answer from \"../types/Answer\";\n\nimport { Question } from \"../types/Question\";\n\nimport AnswerGroup from \"./AnswerGroup\";\nimport NameForm from \"./NameForm\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"./Button\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useHistory } from \"react-router-dom\";\ninterface Props {\n  questions: Question[];\n  uid: string;\n}\n\nconst AnswerQuestions: React.FC<Props> = ({ questions, uid }) => {\n  useFirestoreConnect([{ collection: \"answers\" }]);\n  const answers =\n    useSelector<RootState>((state) => state.firestore.data.answers?.[uid]) ??\n    {};\n  const [errors, setErrors] = useState<string[]>([]);\n  const firestore = useFirestore();\n  const { register, getValues } = useForm();\n  const history = useHistory();\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const values = getValues();\n    let errors: string[] = [];\n    Object.entries(values).forEach(([key, value]) => {\n      if (!value || value === \"0\") {\n        errors.push(key);\n\n        return;\n      }\n    });\n    setErrors(errors);\n    if (errors.length) {\n      try {\n        await firestore.set(\n          `users/${uid}`,\n          { finished: false },\n          { merge: true }\n        );\n      } catch (err) {\n        console.log(err);\n      }\n      console.log(\"errors\", errors);\n      return;\n    }\n    try {\n      await firestore.set(`users/${uid}`, { finished: true }, { merge: true });\n      history.push(\"/see-answers\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      <div className=\"w-full\">\n        <form\n          className=\"flex flex-wrap justify-between w-full \"\n          onSubmit={(e) => handleSubmit(e)}\n        >\n          <div className=\"w-full\">\n            {questions &&\n              questions.slice(0, 10).map((question, i) => {\n                const cls = () => {\n                  let output = \"\";\n                  if (errors.includes(question.id)) {\n                    output += \" ring-2 ring-red-400 \";\n                  }\n                  return output;\n                };\n                return (\n                  <div\n                    key={i}\n                    className={\n                      \"flex flex-col bg-gray-700 mb-10 rounded-2xl shadow-2xl overflow-hidden w-full\" +\n                      cls()\n                    }\n                  >\n                    <blockquote className=\"text-xl p-12\">\n                      {i + 1}. {question.english}\n                    </blockquote>\n\n                    {uid && answers && (\n                      <AnswerGroup\n                        parentErrors={errors}\n                        register={register}\n                        question={question}\n                        uid={uid}\n                        answers={answers as Answer}\n                      ></AnswerGroup>\n                    )}\n                  </div>\n                );\n              })}\n\n            <div className=\"flex flex-col items-center w-full\">\n              <Button className=\"mb-6 w-full\" type=\"submit\">\n                Submit\n              </Button>\n              {!!errors.length && (\n                <div className=\"text-red-400\">{`${errors.length} question${\n                  errors.length > 1 ? \"s\" : \"\"\n                } remaining.`}</div>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default AnswerQuestions;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/helpers/sentenceCase.ts",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/QuestionForm.tsx",["137","138","139","140","141","142","143","144"],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/app/store.ts",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/AnswerGroup.tsx",["145"],"import React from \"react\";\nimport { sentenceCase } from \"../helpers/sentenceCase\";\nimport possibleAnswers from \"../data/answers.json\";\nimport { appendErrors, useForm } from \"react-hook-form\";\nimport { Question } from \"../types/Question\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport Answer from \"../types/Answer\";\nimport RadioInput from \"./RadioInput\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\ninterface Props {\n  question: Question;\n  uid: string;\n  answers: Answer;\n  register: any;\n  parentErrors: string[];\n}\n\nconst AnswerGroup: React.FC<Props> = ({\n  question,\n  uid,\n  answers,\n  register,\n  parentErrors,\n}) => {\n  const schema = yup.object().shape({\n    [question.id]: yup.number().required(),\n  });\n  const firestore = useFirestore();\n  const previousAnswerValue = answers?.[question.id] || \"0\";\n\n  const { register: regThis, getValues } = useForm({\n    defaultValues: {\n      [question.id as keyof Answer]: previousAnswerValue,\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const handleChange = async () => {\n    console.log(\"setting answers\", uid, getValues());\n    if (typeof uid === \"string\") {\n      await firestore.set(`answers/${uid}`, getValues(), { merge: true });\n    }\n  };\n\n  return (\n    <>\n      <div role=\"radiogroup\" className={\"flex items-stretch \"}>\n        {possibleAnswers.reverse().map((answer, i) => {\n          return (\n            <RadioInput\n              ref={(e) => {\n                register(e);\n                regThis(e);\n              }}\n              className={\n                i === 0\n                  ? \"rounded-bl-xl\"\n                  : i === possibleAnswers.length - 1\n                  ? \"rounded-br-xl\"\n                  : \"\"\n              }\n              key={i}\n              index={i}\n              id={question.id}\n              value={\"\" + answer.value}\n              handleChange={handleChange}\n              checked={answer.value === parseInt(previousAnswerValue) ?? 0}\n            >\n              {sentenceCase(answer.key)}\n            </RadioInput>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default AnswerGroup;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/helpers/calculateResults.ts",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/NameForm.tsx",["146","147","148","149"],"import React, { useRef, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useFirestore, useFirestoreConnect } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { RootState, User } from \"../app/store\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Button from \"./Button\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n  uid: string;\n}\nexport type Name = string;\nconst schema = yup.object().shape({\n  name: yup.string().trim().required(),\n});\n\nconst NameForm: React.FC<Props> = ({ uid }) => {\n  useFirestoreConnect([{ collection: \"users\", doc: uid }]);\n\n  const firestore = useFirestore();\n  console.log(\"uid\", uid);\n  const userMatches = useSelector<RootState>(\n    ({ firestore }) => firestore.data.users && firestore.data.users[uid]\n  ) as User;\n  console.log(\"matches\", userMatches);\n  const previousName = userMatches?.name ?? \"\";\n  console.log(\"prev\", previousName);\n  const {\n    register,\n    handleSubmit,\n    setError,\n    errors,\n    watch,\n    getValues,\n    setValue,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  //use hook form can assign refs with register like this in order to share the to assign focus\n  const nameRef = useRef<HTMLInputElement | null>();\n  useEffect(() => {\n    if (nameRef.current) {\n      // register(nameRef.current);\n      nameRef.current.focus();\n      setValue(\"name\", previousName);\n    }\n  }, [previousName]);\n  useEffect(() => {\n    //Nothing\n    return () => {\n      nameRef.current?.value && updateFirestoreIfValid(nameRef.current.value);\n    };\n  }, []);\n\n  const updateFirestoreIfValid = async (name: string) => {\n    console.log(`setting firebase users/${uid} to `, name);\n    await firestore.set(`users/${uid}`, { name }, { merge: true });\n  };\n  const handleChange = async () => {\n    // if (typeof uid === \"string\") {\n    //   await firestore.set(`users/${uid}`, getValues(), { merge: true });\n    // }\n  };\n  const onSubmit = async () => {\n    const name = getValues().name ?? previousName;\n    console.log(`setting firebase users/${uid} to `, name);\n    await firestore.set(`users/${uid}`, { name }, { merge: true });\n    history.push(\"/answer\");\n  };\n  const history = useHistory();\n  const handleClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {};\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label className=\"form-label\" htmlFor=\"name\"></label>\n        <input\n          onChange={handleChange}\n          aria-invalid={errors.name ? \"true\" : \"false\"}\n          className=\"focus:outline-none bg-transparent text-2xl mb-12 w-full\"\n          name={`name`}\n          type=\"text\"\n          defaultValue={previousName}\n          ref={(e) => {\n            register(e);\n            nameRef.current = e; // you can still assign to ref\n          }}\n        />\n        {errors.name && <div>Your name is required.</div>}\n        {watch().name && (\n          <>\n            <div className=\"mb-12 w-full\">{`Hello, ${watch().name}`}.</div>\n            <div className=\"w-full\">\n              <Button type=\"submit\">Confirm</Button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default NameForm;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/RadioInput.tsx",["150","151"],"import React, { Ref } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\ninterface Props {\n  id: string;\n  value: string;\n  handleChange?: () => void;\n  checked: boolean;\n  children: React.ReactChild;\n  className?: string;\n  index: number;\n}\n\nconst RadioInput = React.forwardRef<HTMLInputElement, Props>(\n  ({ index, id, value, handleChange, checked, children, className }, ref) => {\n    const classList = () => {\n      let cls =\n        \"cursor-pointer pointer-events-auto flex items-center justify-center block h-full w-full overflow-hidden text-base text-center x-3 py-1 transition ease-in duration-150 w-full \" +\n        className;\n      if (checked) {\n        cls += \" bg-green-600 hover:bg-green-700 \";\n      } else if (!checked) {\n        cls += \" bg-green-800 hover:bg-green-700 \";\n      }\n\n      return cls;\n    };\n    return (\n      <>\n        <div className=\"flex-1 flex-grow bg-pointer-events-auto justify-center items-center \">\n          <input\n            type=\"radio\"\n            className=\"hidden\"\n            id={id + \"id\" + index}\n            name={id}\n            value={value}\n            autoComplete=\"off\"\n            ref={ref}\n            onChange={handleChange ?? undefined}\n          />\n          <label className={classList()} htmlFor={id + \"id\" + index}>\n            <span className=\"py-2 px-1\">{children}</span>\n          </label>\n        </div>\n      </>\n    );\n  }\n);\n\nexport default RadioInput;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/app/App.tsx",["152","153","154","155"],"import React, { Suspense, useEffect } from \"react\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n// import \"firebase/analytics\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded, useFirestoreConnect } from \"react-redux-firebase\";\nimport { RootState, User } from \"./store\";\nimport SplashScreen from \"../routes/SplashScreen\";\n// import Home from \"../routes/Home\";\n// const Home = React.lazy(() => import(\"../routes/Home\"));\n\nfunction App() {\n  // async function AuthIsLoaded({ children }: { children: JSX.Element }) {\n\n  const auth = useSelector<RootState>((state) => state.firebase.auth) as {\n    uid: string;\n  };\n  // const user =\n  //   isLoaded(auth) &&\n  //   useSelector<RootState>((state) => state.firestore.data.users[auth.uid]);\n  // console.log(\"auth state\", user);\n  // console.log(\"auth uid\", (auth as { uid: string }).uid ?? \"\");\n  // const uid = useSelector<RootState>(\n  //   (state) => state.firebase.auth.uid\n  // ) as string;\n  // useFirestoreConnect([{ collection: \"users\", doc: uid }]);\n\n  // const userMatches = useSelector<RootState>(\n  //   ({ firestore }) => firestore.data.users && firestore.data.users[uid]\n  // ) as User;\n  // console.log(\"uid\", uid, userMatches);\n  //   if (!isLoaded(auth)) return <SplashScreen />;\n  //   return children;\n  // }\n  if (!isLoaded(auth)) return <SplashScreen />;\n  const Home = React.lazy(() => import(\"../routes/Home\"));\n  const SeeAnswers = React.lazy(() => import(\"../routes/SeeAnswers\"));\n  const AnswerQuestions = React.lazy(() => import(\"../routes/AnswerQuestions\"));\n\n  // const canAnswer = () => {\n  //   return userMatches.name;\n  // };\n  // const canSeeAnswers = () => {\n  //   return userMatches.finished;\n  // };\n  return (\n    <Suspense fallback={<SplashScreen />}>\n      <Router>\n        <Switch>\n          {/* <\n          <PrivateRoute\n            isAuthenticated={false}\n            redirectTo=\"/\"\n            restrictedPath=\"/see-answers\"\n            component={SeeAnswers}\n          /> */}\n\n          {/* <Route exact path=\"/answer\" component={AnswerQuestions} /> */}\n          {/* <Route exact path=\"/answer\">\n            {true ? <AnswerQuestions /> : <Redirect to=\"/\" />}\n          </Route> */}\n          <Route exact path=\"/\" component={Home} />\n          <PrivateRoute\n            path=\"/see-answers\"\n            auth={auth}\n            exact={true}\n            redirectTo=\"/answer\"\n            restrictedPath=\"/see-answers\"\n            component={SeeAnswers}\n          />\n          <PrivateRoute\n            path=\"/answer\"\n            auth={auth}\n            exact={true}\n            redirectTo=\"/\"\n            restrictedPath=\"/answer\"\n            component={AnswerQuestions}\n          />\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default App;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/layout/Page.tsx",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/layout/Navbar.tsx",["156","157","158"],"import Page from \"./Page\";\nimport NavLink from \"../components/NavLink\";\nimport { matchPath, useRouteMatch } from \"react-router\";\nconst Navbar: React.FC = () => {\n  // const match = useRouteMatch('/:page/:roomId/:carID') as { params: { page: string } };\n\n  // const isMovieWatchPathActive = !!matchPath(match, '/Movies/:id/watch');\n  return (\n    <nav className=\"bg-gray-800 h-16 flex flex-row flex-no-shrink items-center justify-between px-3 shadow-2xl\">\n      <ul className=\"flex flex-row flex-no-shrink items-center h-full justify-evenly\">\n        <NavLink to={`/`}>Are You R?</NavLink>\n      </ul>\n      <ul className=\"flex flex-row flex-no-shrink items-center h-full justify-evenly\">\n        <NavLink to={`/answer`}>Answer</NavLink>\n      </ul>\n      <ul className=\"flex flex-row flex-no-shrink items-center h-full justify-evenly\">\n        <NavLink to={`/see-answers`}>See Answers</NavLink>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/NavLink.tsx",["159","160"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { matchPath, useRouteMatch } from \"react-router\";\nimport { useFirestore, useFirestoreConnect } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { RootState, User } from \"../app/store\";\ninterface Props {\n  to: string;\n}\n\nconst NavLink: React.FC<Props> = ({ to, children }) => {\n  const uid = useSelector<RootState>(\n    (state) => state.firebase.auth.uid\n  ) as string;\n  useFirestoreConnect([{ collection: \"users\", doc: uid }]);\n  const user = useSelector<RootState>(\n    ({ firestore }) => firestore.data.users && firestore.data.users[uid]\n  ) as User;\n\n  const match = useRouteMatch(\"/:page\") as { params: { page?: string } };\n  const cls = () => {\n    let output =\n      \"py-1 px-3 rounded font-bold hover:text-green-400 transition ease-in duration-150 \";\n    console.log(\"MATCH\", match?.params, to);\n    if (\n      match?.params?.page === to.split(\"/\")[1] ||\n      (match?.params?.page === undefined && to === \"/\")\n    ) {\n      output += \"text-green-500  pointer-events-none\";\n    } else if (!user?.name && to === \"/answers\") {\n      output += \"text-gray-400   pointer-events-none\";\n    } else if (!user?.finished && to === \"/see-answers\") {\n      output += \"text-gray-400   pointer-events-none\";\n    } else {\n      output += \"text-gray-400  hover:text-gray-100 pointer-events-auto\";\n    }\n    return output;\n  };\n\n  return (\n    <>\n      <li className={cls()}>\n        <Link to={to}>{children}</Link>\n      </li>\n    </>\n  );\n};\n\nexport default NavLink;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/Home.tsx",["161","162","163"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Typing from \"react-typing-animation\";\nimport { RootState } from \"../app/store\";\nimport BlinkingCursor from \"../components/BlinkingCursor\";\nimport NameForm from \"../components/NameForm\";\n\nimport Para from \"../components/Para\";\nimport Container from \"../layout/Container\";\nimport Page from \"../layout/Page\";\n\ninterface Props {}\n\nconst Home: React.FC<Props> = ({}) => {\n  const uid = useSelector<RootState>(\n    (state) => state.firebase.auth.uid\n  ) as string;\n\n  return (\n    <Page>\n      <Container>\n        <Para>Welcome, fellow human.</Para>\n        <Para>\n          In order to establish harmonious understanding, please answer the\n          questions assigned to you.\n        </Para>\n        <Para>\n          Begin by stating your name and/or model number.\n          {/* <BlinkingCursor /> */}\n        </Para>\n        <div className=\"pb-3\">\n          <NameForm uid={uid} />\n        </div>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Home;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/SeeAnswers.tsx",["164","165","166"],"import React, { useEffect, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { RootState, User } from \"../app/store\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport ResultCard from \"../components/ResultCard\";\nimport { calculateResults } from \"../helpers/calculateResults\";\nimport Container from \"../layout/Container\";\nimport Page from \"../layout/Page\";\n\nimport Answer from \"../types/Answer\";\n\nimport { Question } from \"../types/Question\";\n\nconst SeeAnswers: React.FC = () => {\n  //to select only this user:\n  // useFirestoreConnect([{ collection: \"answers\", doc: uid }]);\n  useFirestoreConnect([\n    { collection: \"questions\" },\n    { collection: \"answers\" },\n    { collection: \"users\" },\n  ]);\n  const questions = useSelector<RootState>(\n    (state) => state.firestore.ordered.questions\n  ) as Question[];\n\n  const answers = useSelector<RootState>(\n    (state) => state.firestore.ordered.answers\n  ) as Answer[];\n\n  const uid = useSelector<RootState>(\n    (state) => state.firebase.auth.uid\n  ) as string;\n  const users = useSelector<RootState>(\n    (state) => state.firestore.ordered.users\n  ) as User[];\n\n  const results = useCallback(\n    (answer: Answer) => {\n      if (!answer) return;\n\n      if (answer && questions) {\n        return calculateResults(questions, answer);\n      }\n    },\n\n    [questions]\n  );\n  return (\n    <Page>\n      <Container>\n        <div className=\"w-full\">\n          <div className=\"flex flex-wrap justify-between w-full \">\n            <div className=\"w-full\">\n              {answers &&\n                answers.map((answerSet) => {\n                  const res = results(answerSet);\n                  const user = users.find((n) => n.id === answerSet.id);\n                  return (\n                    <ResultCard\n                      key={answerSet.id}\n                      id={answerSet.id}\n                      name={user?.name ?? \"Anonymous\"}\n                      results={res}\n                    />\n                    // <div\n                    //   key={answerSet.id}\n                    //   className={answerSet.id === uid ? \"\" : \"\"}\n                    // >\n                    //   <h2>Name: {user?.name ?? \"Anonymous\"} </h2>\n                    //   <small className=\"text-info\">User ID: {answerSet.id}</small>\n                    //   <div>\n                    //     {res &&\n                    //       Object.entries(res).map(([k, r]) => (\n                    //         <small className=\"pr-3\" key={k}>\n                    //           {k + \" \"}\n                    //           {r ?? \"\"}% /\n                    //         </small>\n                    //       ))}\n                    //   </div>\n                    // </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n        <div className=\"pb-3 w-full\"></div>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SeeAnswers;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/layout/Container.tsx",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/routes/SplashScreen.tsx",["167","168"],"import React from \"react\";\nimport Typing from \"react-typing-animation\";\nimport Container from \"../layout/Container\";\n\ninterface Props {}\n\nconst SplashScreen: React.FC<Props> = ({}) => {\n  return (\n    <div className=\"flex flex-grow flex-col justify-items-center items-center overflow-y-auto\">\n      <div className=\"flex flex-col items-center justify-center h-full\">\n        <h1 className=\"text-4xl lg:text-8xl font-bold align-middle p-3 \">\n          <Typing>Are You R?</Typing>\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default SplashScreen;\n","/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/Para.tsx",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/BlinkingCursor.tsx",["169"],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/ProgressBar.tsx",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/Button.tsx",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/components/ResultCard.tsx",[],"/Users/ivorhoulker/_CODE/_RUR/questioner/src/app/PrivateRoute.tsx",["170"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport SeeAnswers from \"../routes/SeeAnswers\";\nimport { RootState, User } from \"./store\";\n\ninterface Props {\n  path: string;\n  component: React.LazyExoticComponent<React.FC<Props>>;\n  auth: { uid: string };\n  redirectTo: string;\n  restrictedPath: string;\n  exact?: boolean;\n}\n\nconst PrivateRoute: React.FC<Props> = ({ ...props }) => {\n  const { component: Component, redirectTo, auth, path } = props;\n  const user = useSelector<RootState>(\n    (state) => state.firestore.data.users?.[auth.uid]\n  ) as User;\n  const isAuthenticated = () => {\n    if (path === \"/answer\" && !user?.name) return false;\n    if (path === \"/see-answers\" && !user?.finished) return false;\n    return true;\n  };\n  return (\n    <Route {...props}>\n      {isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        // React.createElement(component, { ...props })\n        <Redirect exact to={{ pathname: redirectTo }} />\n      )}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":11,"column":43,"nodeType":"181","messageId":"182","endLine":11,"endColumn":45},{"ruleId":"179","severity":1,"message":"180","line":68,"column":40,"nodeType":"181","messageId":"182","endLine":68,"endColumn":42},{"ruleId":"171","replacedBy":"183"},{"ruleId":"173","replacedBy":"184"},{"ruleId":"175","severity":1,"message":"185","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"186","line":1,"column":28,"nodeType":"177","messageId":"178","endLine":1,"endColumn":39},{"ruleId":"175","severity":1,"message":"187","line":4,"column":21,"nodeType":"177","messageId":"178","endLine":4,"endColumn":25},{"ruleId":"175","severity":1,"message":"188","line":5,"column":10,"nodeType":"177","messageId":"178","endLine":5,"endColumn":26},{"ruleId":"175","severity":1,"message":"189","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":14},{"ruleId":"175","severity":1,"message":"190","line":12,"column":8,"nodeType":"177","messageId":"178","endLine":12,"endColumn":16},{"ruleId":"175","severity":1,"message":"191","line":15,"column":13,"nodeType":"177","messageId":"178","endLine":15,"endColumn":16},{"ruleId":"175","severity":1,"message":"192","line":16,"column":10,"nodeType":"177","messageId":"178","endLine":16,"endColumn":21},{"ruleId":"175","severity":1,"message":"193","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":18},{"ruleId":"175","severity":1,"message":"194","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":16},{"ruleId":"175","severity":1,"message":"195","line":6,"column":3,"nodeType":"177","messageId":"178","endLine":6,"endColumn":20},{"ruleId":"175","severity":1,"message":"196","line":7,"column":3,"nodeType":"177","messageId":"178","endLine":7,"endColumn":16},{"ruleId":"175","severity":1,"message":"197","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":22},{"ruleId":"175","severity":1,"message":"198","line":31,"column":5,"nodeType":"177","messageId":"178","endLine":31,"endColumn":13},{"ruleId":"175","severity":1,"message":"199","line":32,"column":5,"nodeType":"177","messageId":"178","endLine":32,"endColumn":11},{"ruleId":"175","severity":1,"message":"200","line":68,"column":9,"nodeType":"177","messageId":"178","endLine":68,"endColumn":28},{"ruleId":"175","severity":1,"message":"201","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":22},{"ruleId":"175","severity":1,"message":"198","line":33,"column":5,"nodeType":"177","messageId":"178","endLine":33,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":50,"column":6,"nodeType":"204","endLine":50,"endColumn":20,"suggestions":"205"},{"ruleId":"202","severity":1,"message":"206","line":56,"column":6,"nodeType":"204","endLine":56,"endColumn":8,"suggestions":"207"},{"ruleId":"175","severity":1,"message":"208","line":74,"column":9,"nodeType":"177","messageId":"178","endLine":74,"endColumn":20},{"ruleId":"175","severity":1,"message":"209","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":20},{"ruleId":"175","severity":1,"message":"210","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":17},{"ruleId":"175","severity":1,"message":"185","line":1,"column":27,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"211","line":10,"column":3,"nodeType":"177","messageId":"178","endLine":10,"endColumn":11},{"ruleId":"175","severity":1,"message":"212","line":14,"column":20,"nodeType":"177","messageId":"178","endLine":14,"endColumn":39},{"ruleId":"175","severity":1,"message":"187","line":15,"column":21,"nodeType":"177","messageId":"178","endLine":15,"endColumn":25},{"ruleId":"175","severity":1,"message":"213","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":12},{"ruleId":"175","severity":1,"message":"214","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":19},{"ruleId":"175","severity":1,"message":"215","line":3,"column":21,"nodeType":"177","messageId":"178","endLine":3,"endColumn":34},{"ruleId":"175","severity":1,"message":"214","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":22},{"ruleId":"175","severity":1,"message":"189","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":14},{"ruleId":"175","severity":1,"message":"216","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":14,"column":32,"nodeType":"181","messageId":"182","endLine":14,"endColumn":34},{"ruleId":"175","severity":1,"message":"185","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"217","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":19},{"ruleId":"175","severity":1,"message":"218","line":31,"column":9,"nodeType":"177","messageId":"178","endLine":31,"endColumn":12},{"ruleId":"175","severity":1,"message":"219","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":17},{"ruleId":"179","severity":1,"message":"180","line":7,"column":40,"nodeType":"181","messageId":"182","endLine":7,"endColumn":42},{"ruleId":"179","severity":1,"message":"180","line":5,"column":42,"nodeType":"181","messageId":"182","endLine":5,"endColumn":44},{"ruleId":"175","severity":1,"message":"220","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":18},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"@typescript-eslint/no-unused-vars","'useFirestore' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["221"],["222"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.","'User' is defined but never used.","'calculateResults' is defined but never used.","'Typing' is defined but never used.","'NameForm' is defined but never used.","'yup' is defined but never used.","'yupResolver' is defined but never used.","'Category' is defined but never used.","'firebase' is defined but never used.","'useCollectionData' is defined but never used.","'useCollection' is defined but never used.","'useAuthState' is defined but never used.","'setError' is assigned a value but never used.","'errors' is assigned a value but never used.","'updateSubcategories' is assigned a value but never used.","'appendErrors' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has a missing dependency: 'updateFirestoreIfValid'. Either include it or remove the dependency array.",["224"],"'handleClick' is assigned a value but never used.","'Ref' is defined but never used.","'useForm' is defined but never used.","'Redirect' is defined but never used.","'useFirestoreConnect' is defined but never used.","'Page' is defined but never used.","'matchPath' is defined but never used.","'useRouteMatch' is defined but never used.","'BlinkingCursor' is defined but never used.","'ProgressBar' is defined but never used.","'uid' is assigned a value but never used.","'Container' is defined but never used.","'SeeAnswers' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [previousName, setValue]",{"range":"229","text":"230"},"Update the dependencies array to be: [updateFirestoreIfValid]",{"range":"231","text":"232"},[1470,1484],"[previousName, setValue]",[1631,1633],"[updateFirestoreIfValid]"]